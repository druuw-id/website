"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[103],{17484:(t,e,r)=>{r.d(e,{OptimizeIndices:()=>n});var s=r(16101);function n(t){const e=[],r=t.length/3;for(let s=0;s<r;s++)e.push([t[3*s],t[3*s+1],t[3*s+2]]);const n=new Map;e.forEach(((t,e)=>{t.forEach((t=>{let r=n.get(t);r||n.set(t,r=[]),r.push(e)}))}));const o=new s.P(r),i=[],h=t=>{const r=[t];for(;r.length>0;){const t=r.pop();o.get(t)||(o.set(t,!0),i.push(e[t]),e[t].forEach((t=>{const e=n.get(t);e&&e.forEach((t=>{o.get(t)||r.push(t)}))})))}};for(let t=0;t<r;t++)o.get(t)||h(t);let c=0;i.forEach((e=>{t[c++]=e[0],t[c++]=e[1],t[c++]=e[2]}))}},16101:(t,e,r)=>{function s(t){return Math.floor(t/8)}function n(t){return 1<<t%8}r.d(e,{P:()=>o});class o{constructor(t){this.size=t,this._byteArray=new Uint8Array(Math.ceil(this.size/8))}get(t){if(t>=this.size)throw new RangeError("Bit index out of range");const e=s(t),r=n(t);return!!(this._byteArray[e]&r)}set(t,e){if(t>=this.size)throw new RangeError("Bit index out of range");const r=s(t),o=n(t);e?this._byteArray[r]|=o:this._byteArray[r]&=~o}}}}]);